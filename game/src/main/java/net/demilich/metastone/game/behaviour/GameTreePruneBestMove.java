package net.demilich.metastone.game.behaviour;

import net.demilich.metastone.game.GameContext;
import net.demilich.metastone.game.Player;
import net.demilich.metastone.game.actions.ActionType;
import net.demilich.metastone.game.actions.GameAction;
import net.demilich.metastone.game.behaviour.heuristic.IGameStateHeuristic;
import net.demilich.metastone.game.cards.Card;
import net.demilich.metastone.game.entities.heroes.Hero;
import net.demilich.metastone.game.entities.heroes.HeroClass;
import net.demilich.metastone.game.entities.minions.Minion;
import net.demilich.metastone.game.logic.GameLogic;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.*;

// 尝试减小搜索的branching factor，增加搜索深度，看看对AI效果的影响
public class GameTreePruneBestMove extends Behaviour {

	// 使用Batch CEM, batchSize = 50; updateBatchSize = 20; topRatio = 0.25; 总局数 40000， 随机初始化N(0,0.25)， 逐渐减小的Noise: Math.max(0.1 - 0.01*iterNum, 0);
	// ######################## 特征大扩展到88个，增加随从的各种技能特征，如嘲讽、风怒、冻结等等，也增加武器攻击、耐久等特征 ###############################
	// ####################### 使用 Wild pirate warrior卡组进行训练，针对默认GameStateValue进行优化，搜索深度 depth=2 ##########################
	// iterNum=11, bestPara, 针对默认GameStateValue 胜率 55.5%, 对 Greedy Best Move 胜率 97%  （下面的胜率评估都是随机200局的结果）
//	double[] parWeight = {-0.07103707450677957, 0.39564519200409753, -1.242508031676314, 0.5766920645060912, 0.5517316750422674, 1.087100713388673, 0.2782518257911362, 0.6855722732698842, -1.388707873826581, -1.271006220523324, 0.9670263790327637, 0.6094031965504108, 0.24391163531654347, 0.26211360033281533, -0.15160648601249982, -1.0899389006628142, -0.03219647528914782, 0.26354865224672336, 0.185310698937866, 0.5393043290373792, 1.1694734907037603, -0.4120360357931014, 1.91529969781979, -0.2804869317323049, -2.016009988878115, 0.4459843871487358, 0.22635986218738796, 0.07100149092207408, -0.9081550590470383, 0.22558552078865612, -0.9506228032935895, -0.2778107355235946, -0.3312130613326187, -0.337843127590343, -0.05080045571031558, -1.0197481563669304, 0.6275583798397925, -1.7143933343313955, -0.695964265508372, -0.2296404940201889, 0.277039321104856, 1.0613177160385328, 1.6791104096905969, -0.911725875878305, -0.15632176569098488, -0.6339964290507436, 0.6763066802846818, -1.564525884871963, -0.37057374086984507, -0.29785324775168937, -1.5004124716994212, 0.8186416436478934, -0.33864237276638554, -1.7717810429703653, -0.396968056434088, -0.07669408397272809, -0.6418822415106458, -0.9591696293269185, 0.6286896653804916, -1.2566884901395856, 1.5166461223312868, -0.19615619520596653, -0.32067896090610143, 0.46347662484023433, -0.22712683113232232, -0.6004200338713632, -0.809611101596797, 0.22085930224500366, 0.5687765434469121, 0.12895811173293084, 0.5523938288392505, 0.25238651799382583, -0.4463799516754793, 0.4859445804859011, 0.4454014150712484, -0.9830484845910167, -0.2103426558111179, 0.4492070725021964, 0.606321533690112, -0.9852254205197175, 0.480852670477006, 0.1925558399913696, -0.13635179140057418, -0.15019015479715023, -0.9437807984550957, -0.29951180242124886, 0.5113543788593151, 1.362439415431286};
	// iterNum=10, ParaMean, 针对默认GameStateValue 胜率 56.5%
//	double[] parWeight = {-0.10914366325795763, 0.5499153405387595, -1.0056816742770942, 0.5679066784902266, 0.22572317538669137, 0.7569117351028953, 0.031090223903131497, 0.5948143318102023, -1.6408563516133623, -0.5030324239339852, 0.7714242693161015, 0.5973176348034501, 0.13108385590035537, 0.4723841244903049, -0.11482968813648138, -1.1762875488676279, -0.8870647706596714, 0.20843368164132814, 0.21181574282584537, -0.027776847636889857, 1.225133670044487, -0.4176850644978004, 0.9759306662163644, -0.25321195498396687, -1.6354250574369942, 0.49562518244901205, 0.360242988693158, -0.4389519670666512, -1.0233063534961828, -0.0776956293599365, -0.2822725974028225, -0.3661155614520356, -0.004262360856230152, -0.260713859225426, -0.08145768821434349, -1.064244147821679, 0.6528026417404013, -1.4092148044645072, -0.15626135284132356, 0.013867689672995277, 0.39038116075909024, 1.328310188265593, 1.8488364036210936, -0.7159139850413819, -0.10645620421367641, -0.6255621128780878, 0.4221648433717463, -0.2738667779997428, -0.22323819106250747, 0.06907447461071525, -1.1567480671984773, 0.6549605101901431, -0.5390912616978103, -1.6274276940574643, -0.4084750958713535, -0.015028833585417001, -0.8187054529715742, -1.302294525290796, 0.06540819996033118, -1.2672817680688953, 1.566037820724829, -0.1676611238769868, -0.6848306317144978, 0.021473017295027142, -0.2733319080925856, -0.5144265623558519, -0.5286005453942575, 0.14536373931020455, 0.43053362100371917, 0.18704273483054112, 0.13880520559542564, 0.9698237999251621, -0.4979086616255362, 0.1748434615232814, 0.2967656395531152, -1.166568481168523, -0.2637274662594512, 0.8209120162458005, -0.20417373129700636, -0.8829143087427991, 0.6192902754241582, 0.1358085064867311, 0.4214205915991043, -0.12570660884946214, 0.11559140434190666, -0.44882476144467115, 0.3254328707155658, 1.4614393839230957};
	// iterNum=14, bestPara, 针对默认GameStateValue 胜率 59%
//	double[] parWeight = {-0.06842227855704575, 0.531395193017131, -1.0237071115166314, 0.9821571580465394, 0.185583501483411, 0.6657046377177561, 0.03562111707461457, -0.4218381996822439, -1.8079308339992806, -0.25637747115238557, 0.7881280650300405, 0.6499609401451998, 0.13114019188114542, 0.20319900674440544, 0.3167113992148181, -1.2744903304208455, -1.3669345675224673, 0.046728040972776996, 0.2708976063685543, 0.3977754567514053, 1.2581224961519109, -0.376983121364032, 0.20059919709259455, -0.372087309126495, -1.86983490950896, 0.4450260534544188, 0.3758662431038682, -0.2912499305003001, -1.1358043620466114, -0.20034112084448416, -0.038148941812400805, -0.37431246793318296, -0.5176573109558864, -0.36369164742061055, -0.05572910997283402, -1.0556208262920184, 0.6558209773330775, -1.8459878123586104, -0.49857302358945177, -0.03154582971733494, 0.3230048623010618, 0.9086817836612316, 1.7780248567097867, -0.8982777033369852, -0.18193294851846475, -0.6001857123632405, 0.28918810868074873, -0.6189550554343664, -0.35261025014866965, -0.0862640413431992, -1.557401520601084, 0.8310127369123876, -0.1957033845158776, -1.9493556752404122, -0.4203555298533814, 0.08138732462338713, -0.9012619656275546, -0.7950633642092364, 0.4716458987193438, -1.1585619236929074, 1.6346489344236828, -0.19774345594686327, -0.3112119524050294, 0.09923640618809476, -0.3796418070076693, -0.38638200749516294, -1.072516706896448, 0.02765765592907579, 0.47424436441398776, 0.22117760815015108, 0.4117108624794332, 0.3039364915720735, -0.43160395802412144, -0.3801268236018796, 0.3546727934021904, -0.9318027621082401, -0.2570926266402941, 1.2018749994471314, -0.6847618466780394, -0.9063228996072069, 0.7204495644343104, 0.15082596633864587, -0.344207423606857, -0.19826359298248367, 0.7043543477033599, -0.4406596408578044, 0.3766990379464057, 1.5601270342576743};
	// iterNum=16, bestPara, 针对默认GameStateValue 胜率 61.5%  胜率 61.5%  胜率 53.5%  胜率 50% （很不稳定的样子）
//	double[] parWeight = {-0.049246478000466935, 0.4824399137875914, -2.5139087510788736, 0.6231379713182994, 0.14687008026304638, 0.650837233682471, 0.04988444926138969, 0.45626762842554763, -1.524924051143562, -0.856548337526593, 0.7699859732129024, 0.5960179010611457, 0.13633436008323477, 0.14221964601980855, -0.28684356054627547, -1.2610907206827933, -0.45054417539496816, 0.08452081530679961, 0.20731967608268648, 0.3196438179764997, 1.3051473790561394, -0.458283769958828, 0.24948400620987754, -0.2372212583615657, -1.1864154728588612, 0.44019271925830933, 0.5882643184425553, -0.5849962452182628, -1.1591896859716035, -0.23828783656700264, -0.373423386163382, -0.3578686646974568, -0.12908847489145858, -0.5231861385061187, -0.09585077007528978, -1.032773027665446, 0.6131361625531436, -1.5200214443708788, -0.2622221185541382, -0.1220508270318424, 0.4021425890843698, 1.3332863283082204, 1.7878517877126, -0.8889580388312162, 0.06602865414243701, -0.5253514298380115, 0.2553199692410566, 1.6444233320116792, -0.3896369503591405, 5.233988024754277E-4, -0.7384151448336376, 0.7809940586084735, -0.06160863262597685, -2.1223111644346577, -0.4791307419600547, 0.08257063054976248, -0.6887360660773874, -0.693508777950431, 0.36495977075432173, -1.4163249720406756, 1.561580432285362, -0.2261669110253979, -0.6046160356371735, 0.5023017040646455, -0.25635459220151574, -0.48623122640890837, -0.6907796890395878, 0.08232777008826109, 0.43156384561246325, 0.2003003012566852, 0.6292223046321401, 0.08697841305943105, -0.43702172054170885, 0.29410348309886464, 0.40318576924438737, -1.5621450166654658, -0.2660562841379354, 0.96201148115281, -0.6245297513383935, -0.8030126592026815, 0.7711191159660943, 0.22256871146494078, -0.43636818988102755, -0.20500697333198611, 0.19099251217713925, 0.036202801597311596, 0.32559288370432826, 1.5363620141653456};
	// iterNum=16, ParaMean, 针对默认GameStateValue 胜率 56.5%
//	double[] parWeight = {-0.05249627430672692, 0.46017206090270973, -0.8575694132946726, 0.9799338278414487, 0.14262646136234386, 0.7073511851468735, 0.01535571398652997, 0.40203439013582737, -1.2926206358582732, -0.60670779054112, 0.8264747765637079, 0.5983912027052478, 0.10946702735918065, 0.14586323626875258, -0.1832537043738749, -1.3063332969549513, -0.567994723775491, 0.08009665717270137, 0.2127367279646149, 0.36474503175382333, 1.304763725558113, -0.43591390061740143, 0.8384463349987756, -0.2767764351253811, -1.6172631710232, 0.4417847722658368, 0.5212269314066705, -0.40152826184063056, -0.9867271918464059, -0.1866228201615078, -0.1772464702241426, -0.31079823525103245, 0.016547568193930738, -0.279900877751545, -0.09848168571289648, -1.0357349199915078, 0.6495976852712595, -1.575203919655626, -0.40954736764206795, -0.19524053531735555, 0.3487223513822107, 1.1639799863294849, 1.7895793737497605, -0.8133950675646195, 0.0034625568570355583, -0.5308498600987719, 0.27427297343939294, 1.1412751022158933, -0.31181486674492964, -0.09975268548315055, -0.8407474878056718, 0.7488154411836427, -0.08751407067625833, -1.8888555376047627, -0.45884955426819785, 0.19970523910302967, -0.6874952221252897, -0.5662444065879623, 0.49017917277876955, -1.2033362624208008, 1.5444967810298003, -0.20712171325441556, -0.7526484223054382, 0.38871672626214304, -0.36097282070891346, -0.3719325573936122, -0.7866453783603597, 0.002870074498074448, 0.3991850724112533, 0.21935687990965924, 0.5015344133739932, 0.4860159413543094, -0.4435025803075524, 0.2802118896653701, 0.40047538582552694, -1.4854391234890585, -0.3550983613018527, 1.143766211008633, -0.9167449908754097, -0.8559921509566172, 0.9553792302642515, 0.2319896148994615, -0.46112105977784507, -0.0024546749920275612, 0.150584391270651, -0.24904290404993126, 0.3261931153114942, 1.4677798810997884};
	// iterNum=22, bestPara, 针对默认GameStateValue 胜率 59.5%
//	double[] parWeight = {-0.05211572700620054, 0.40453120755895927, -0.5187942406180238, 1.0612720869777998, 0.18498202033443983, 0.7032863137701039, -0.07117800423662018, -0.1861271507145117, -1.419035755238697, -0.6020181835296211, 0.7871187341990223, 0.5998344690100309, 0.1182706529329553, 0.20836731961478505, -0.14618415570423365, -1.2834825481600878, -0.7522957070006234, 0.09631574523067828, 0.21890806603651922, 0.23439704805425343, 1.3257468811371098, -0.48484560759208695, 0.2891720864343859, -0.2708976520837716, -1.1779322434695954, 0.44934276789950517, 0.40957478635107464, -0.41461426399892204, -0.6645706877887608, -0.26926458941790793, -0.08139116209750372, -0.29987671190828413, -0.2767225437954224, -0.29846634211981016, -0.11549804388703555, -1.0312294470807806, 0.60236372840409, -1.5469314006713888, -0.43833536668840384, -0.23113840747768036, 0.33813393034077927, 1.0666719918046954, 1.7862784973552066, -0.6905268090180564, -0.00923161277781722, -0.5390429138032692, 0.28169369731773936, 1.5442130587275573, -0.4458154945575561, 0.16238639491158566, -0.6462567234794301, 0.7627338799731312, -0.09212157389162852, -1.9891736976293732, -0.4184213824523181, 0.2153538794574577, -0.7344402537034254, -0.735115842914292, 0.41264372542588573, -1.123745404587545, 1.5092105975785923, -0.22820820207810805, -0.3647607722849669, 0.22965586520983494, -0.34438936584373214, -0.35009928405986895, -0.628361280264325, -0.001894650781049765, 0.4010140819985648, 0.10606459119131713, 0.4910587507858615, 0.6132354314078874, -0.4517690277875886, 0.26471062991434013, 0.3989747118387457, -1.3246481814282782, -0.4102213176202249, 1.0714120772666418, -0.5406040259122269, -0.9106332572554301, 0.7910458162347441, 0.2373855448945067, -0.44991088017997993, -0.030704268638423213, 0.10651227492689627, -0.9754870951592858, 0.3302443252647904, 1.4758368118666583};
//	 iterNum=25, bestPara, 针对默认GameStateValue 胜率 61.5%  胜率 66.5%  胜率 61% （Good）
//	double[] parWeight = {-0.042435191603752365, 0.40616696103829747, -0.6076077508888231, 0.7272720043082649, 0.20202105394258138, 0.6313194790542382, 0.018128759542628426, -0.6714877445764238, -1.4053075565764823, -0.5645665894497521, 0.7847370830575832, 0.6027815061309918, 0.11944932690773696, 0.16639617889671887, -0.596884142191235, -1.303442871303662, -0.7689279203049311, 0.08684843915912507, 0.2194776555521321, 0.3016746685481717, 1.2937229089380362, -0.3867675424274616, 0.1076755527545435, -0.2732232995785765, -1.2185303120526827, 0.44953477632896055, 0.4381595843767112, -0.42740268057811853, -0.7593509953652382, -0.25454178333555133, -0.06777467174623754, -0.29690084326922533, 0.139006279981216, -0.19757466435610388, -0.10281368164119024, -1.0318842806816224, 0.6697091092076944, -1.5504887549148079, -0.46513049548185065, -0.224168675085325, 0.3363897344845124, 1.0077572813673379, 1.790712443198513, -0.7974532011373017, -0.034379835513210874, -0.53728431299419, 0.27911211300832656, 1.77296275442259, -0.49676110743592145, 0.1543295718827667, -0.8465960481972349, 0.7616942260912617, -0.09467554276581093, -2.0242808280175053, -0.42044884895501194, 0.22098060325157623, -0.7124548934850738, -0.46505479523846677, 0.48943013064063173, -1.0814450906779396, 1.494202436696506, -0.2253465154462635, -0.45375551865466784, 0.23376970921025383, -0.31330715778322343, -0.36119276257174077, -0.643335795514266, -9.750616593995213E-4, 0.38910933337215503, 0.09884268820871578, 0.37335447500509883, 0.8047764493080031, -0.4720077472112548, 0.264490464098162, 0.4104466046033848, -1.3686731855897478, -0.3840621668768126, 1.0668114179340098, 0.2664341808467372, -0.9317865799520276, 0.7754792723230315, 0.23662829519630627, -0.4460817116862948, -0.010734604936549205, 0.08007887984653188, -0.7490589136711456, 0.32186845493246313, 1.4714419204754288};
	// iterNum=31, bestPara, 针对默认GameStateValue 胜率 62.5%  胜率 65.5%  胜率 58%
//	double[] parWeight = {-0.046213050267492464, 0.4342703951207023, -0.49781201023387817, 0.8437570953149934, 0.20770599795742795, 0.6574730259915661, 0.007998987563182477, -0.5566659721623878, -1.5109955061082214, -0.5915271625271918, 0.7834250538256503, 0.6005883754781176, 0.11896266574973054, 0.1955039987993421, -0.4284538392845146, -1.317054449762594, -0.6925468201911233, 0.10462854840765501, 0.21739503893636222, 0.2942665670387469, 1.3039349833731047, -0.44462215439439046, 0.11554390453977183, -0.2819045442367427, -1.2217370333198556, 0.44735625409637536, 0.4255539125121843, -0.4251397936845355, -0.7419260933698898, -0.20171625429381135, -0.08247871822333533, -0.29455626427054027, 0.0544077396406184, -0.4127762691151836, -0.09846537339621078, -1.0318717313188492, 0.690733116458032, -1.550341524796915, -0.42821245438787725, -0.22879519138224355, 0.35331557853319867, 1.0553549115562695, 1.7888955704931917, -0.722469895371181, -0.03966377737789866, -0.5449104322175602, 0.27832578691486903, 2.1172860511498612, -0.4745297895107765, 0.16406834099091996, -0.6822413936070714, 0.7629291486234225, -0.09466792343846281, -2.005861669511064, -0.41537958562121136, 0.2281423313625167, -0.6951680263314735, -0.46917960494888755, 0.4811553136467787, -1.1577626893003625, 1.476703365125417, -0.2207451769047674, -0.44624558320178476, 0.24368504937764932, -0.3193319358645461, -0.36293990148198363, -0.6750462815847764, -0.0019577007025410736, 0.38383543978138246, 0.09823152882389076, 0.3210662637147277, 0.7702820657991762, -0.4800408940467279, 0.26171603686382927, 0.41217504379033965, -1.4176415585155966, -0.39104656750395367, 1.0392250803995173, -0.2671928877285672, -0.9011787395772183, 0.7979339554060503, 0.2370451698337826, -0.44540066674923606, 0.01405567069526889, 0.14839061951357305, -0.7042397448860396, 0.33070530499510997, 1.4738462275242676};
	// iterNum=33, bestPara, 针对默认GameStateValue 胜率 62%   胜率 59.5%   胜率 62%
//	double[] parWeight = {-0.04491263006270403, 0.4430355404169877, -0.541961906820679, 0.853662003405448, 0.20768935579713177, 0.6608624320793993, -0.007635953654025766, -0.5557256132776426, -1.4991454022795976, -0.5910853168720751, 0.7822463975214621, 0.600630858373659, 0.11855163373655825, 0.20212683270767404, -0.1644133252027914, -1.3163132804977449, -0.6988432347259403, 0.11101634942933475, 0.2160082595066602, 0.29270585228297247, 1.2973419996622801, -0.4302494497114055, 0.11350723393924253, -0.2870004764706799, -1.2784902145024235, 0.44774701996978616, 0.4541778247153897, -0.3607908591806641, -0.7510495098927664, -0.17680810573896655, -0.08313106467203481, -0.29466683679607714, 0.030913976864863576, -0.49458493864520325, -0.09910080442828385, -1.0318302481774266, 0.6931205164330454, -1.5531232888423483, -0.42004071308880775, -0.2328981788700962, 0.34170751601438065, 1.0654441310158485, 1.7898665624912926, -0.7215008186094333, -0.03891921832930864, -0.5423927640424366, 0.27678285371398215, 3.3688006268575417, -0.4757232776016079, 0.17316680516123137, -0.698804197475573, 0.7625701384001784, -0.09534888166160956, -1.9987640409252847, -0.41732297316482747, 0.22853390786841823, -0.7112622778706371, -0.5382253001493109, 0.48563417441480916, -1.1577583962815328, 1.4937038981707922, -0.2103754699594113, -0.4452181325030424, 0.24220416263185982, -0.3285807313461618, -0.36477791715959834, -0.6792835552906953, -0.0019672145021382677, 0.383975826224685, 0.0989923861035451, 0.32583862267788694, 0.8190847609835166, -0.47980620463590684, 0.25971460254885825, 0.4126093149485891, -1.4171869743233207, -0.37986437615090873, 1.0376732820611005, -0.30451457785377023, -0.8782067333983004, 0.8012400488474171, 0.23736753808946548, -0.44673419333831466, 0.02192735100793302, 0.15244893396972153, -0.6958146017637838, 0.329611295891566, 1.4738087838756913};
	// 上面iterNum=25,31,33这3个参数的和， 胜率 58.5%   胜率 60%   胜率 60%
//	double[] parWeight = {-0.1336,1.2835,-1.6474,2.4247,0.6174,1.9497,0.0185,-1.7839,-4.4154,-1.7472,2.3504,1.8040,0.3570,0.5640,-1.1898,-3.9368,-2.1603,0.3025,0.6529,0.8886,3.8950,-1.2616,0.3367,-0.8421,-3.7188,1.3446,1.3179,-1.2133,-2.2523,-0.6331,-0.2334,-0.8861,0.2243,-1.1049,-0.3004,-3.0956,2.0536,-4.6540,-1.3134,-0.6859,1.0314,3.1286,5.3695,-2.2414,-0.1130,-1.6246,0.8342,7.2590,-1.4470,0.4916,-2.2276,2.2872,-0.2847,-6.0289,-1.2532,0.6777,-2.1189,-1.4725,1.4562,-3.3970,4.4646,-0.6565,-1.3452,0.7197,-0.9612,-1.0889,-1.9977,-0.0049,1.1569,0.2961,1.0203,2.3941,-1.4319,0.7859,1.2352,-4.2035,-1.1550,3.1437,-0.3053,-2.7112,2.3747,0.7110,-1.3382,0.0252,0.3809,-2.1491,0.9822,4.4191};

	// ####################### 使用 Wild pirate warrior卡组进行训练，针对GameTreeBestMove进行优化，搜索深度 depth=6, maxNumMoveSearched = 6 ##########################
//	#################### 发现搜索深度变深了之后，自身Hp对应的weight变成正的了 ################
//	iterNum = 10, bestPara, 针对默认GameStateValue胜率 66.5%  针对GameTreeBestMove胜率 54.5%
//	double[] parWeight = {0.6795165199469433, 1.2523618203991842, -0.9092481200118847, 1.7659773581384903, 0.20728341530610236, 0.8397766966882022, 0.4145919828486306, -0.6427332351907393, -0.13034852583163237, 0.06882577444191174, 0.25639119115414016, 1.8285015668172984, 1.0404275550478137, 0.12863291210975727, -1.1727895521663538, -0.4403345168901645, -1.963535279387227, 0.2085071471776143, 0.5417449523436157, 1.1960454277884973, 2.191687877654466, -0.3842377992580281, -0.42605058537780677, -0.3100902378208898, -0.6826145126253335, 0.5991710605920362, 0.5363549068481502, -2.097407206203234, -0.8706871933024722, -1.1286761475426106, 0.31887091560736075, 0.3629946156241283, -1.0801544778596455, 1.4227255190000374, 0.38881619656520655, -1.657949743291431, 0.11625227324116016, -1.3565249586738846, -0.7445023168582607, -0.8576371710542068, 0.6026569511072534, 1.136871791120627, 0.5444190166085155, -1.2970060129352519, -0.9773734115444139, -0.2612066806543842, -0.10072031330534169, 1.4645783951955953, -1.673688686537184, -0.9441165065359669, -0.6589754079011884, 0.8410696797168544, -0.14887632475099633, -2.26572586344267, -1.3014703857600045, 0.7672694449567212, -0.0687820403358311, -1.0763633985606431, 1.0008030683839975, 0.0879177079148977, 1.8975556999672394, 0.3066009246187448, -1.0338239173775914, 0.8123752502188726, 0.12738954782170395, -1.6557368315735128, -2.3276847632581195, -0.1110149741652122, -0.3863297001396302, -0.13942735672329615, 1.3224987113538984, 0.16570839274123225, -0.3065386210017237, 0.17973766172161765, -0.6012549866877375, -1.7325561180363689, -0.33142478419895316, 1.551596496781241, -1.1501383674261678E-4, -0.31983741378188496, 0.14206486869362822, 0.6157441055995573, -0.2812112163554356, -0.33164312093852294, -0.24761542973369494, -0.5910666526117657, 0.46712805336528934, 2.7357746148245745};
//	iterNum = 18, bestPara, 针对默认GameStateValue胜率 66.5%  针对GameTreeBestMove胜率 55.5%  （Good）
	double[] parWeight = {0.760326412267397, 1.0589083919017865, -0.9400597870303837, 1.8744045092345258, 0.40236541366111334, 0.7418310137683413, 0.484131665708331, -0.7552493510082674, -0.49584676055695726, -0.16698138431239073, 0.36754468394420575, 1.4864556790810401, 1.1277694490216241, -0.19385547308776607, -1.0543152353607872, -0.2839165182591483, -1.4812832356356582, 0.3152121620740715, 0.0576844177240588, 1.1548436693125355, 1.9800036654926079, -0.3901963327635122, -0.7253225619942502, 0.18436967723674624, -0.6734730405335783, 0.5670641396548124, 0.639198399863008, -2.323129891333293, -1.0595513754902268, -0.804768708781494, 0.049672910287548194, 0.45954962674589844, -1.2431053666129253, 1.453612258307805, 0.26218920504452126, -2.0395371675289904, 0.18812695989268322, -1.328556982125309, -0.09499834083064819, -1.3747489091708807, 0.4488316541321531, 1.557497817592364, 1.0913026067029423, -0.597424707768485, -0.8361789076762033, -0.30777376598675443, -0.12238371097680156, 1.5841665240946965, -1.6267115776236394, -0.8061619411443898, -0.6975022521655243, 0.8245686938375283, -0.1718025408001051, -1.965065224429499, -1.59218011905894, 0.5600873334680981, -0.1825971189270253, -0.584501980650917, 2.416352484932763, -0.994680624848772, 1.9001580351986664, 0.11200461958090441, -1.149550315376586, 0.08082039517078825, -0.16580058883653237, -1.571984435874137, -2.4570940338800336, -0.15228687237889565, -0.1436000925996575, -0.06952984168734147, 0.8184547686840771, 0.6615721068181535, -0.2850074919127527, 0.16685275047289128, -0.01777378273904684, -1.705839086129454, -0.22775080851185345, 1.740876345330731, 0.2765548960828773, -0.3556647399330023, 0.4369754630045146, 0.679533140719245, 0.7003181586567979, 0.3695026344221172, -0.45705065513923954, -0.5747965912920181, 1.4643969249437774, 3.3167090234141243};
// 	iterNum = 20, bestPara, 针对默认GameStateValue胜率 63%  针对GameTreeBestMove胜率 56.5%
//	double[] parWeight = {0.6151185217302308, 1.0372810391453746, -0.9469821944078924, 1.9148850376503033, 0.4222524581137496, 0.7292071027515483, 0.4727390663963056, -0.7660251007566019, -0.45673443132449326, -0.2881150260591379, 0.31669336945757226, 1.4531064391488686, 1.128583041398617, -0.32673427104528324, -0.9937439089695327, -0.3240755031860272, -1.4970577655351234, 0.31663968208557797, 0.08064903657477815, 1.0498173382604172, 1.982114127216599, -0.3987693564633183, -0.6578175287630699, 0.1826513600340124, -1.0130185332969035, 0.5869186245062115, 0.6298030187062803, -2.2858402269209295, -1.0574422574340225, -1.258808083839063, 0.11739286766358076, 0.465901995496157, -1.2661815800971112, 1.4723942154895406, 0.26236729634346573, -1.882530497667294, 0.1987956709620224, -1.3223892392715582, -0.03843381831896129, -1.2003197882490078, 0.46250364112455644, 1.52553065208928, 1.0913902990095465, -0.8109254118502329, -0.7917609236844039, -0.4005189787180286, -0.28287301044348334, 1.608986432491519, -1.6320440614555514, -0.6793678816850176, -0.6761481152507954, 0.82257816927601, -0.1564559788937385, -2.258876939327329, -1.591714304943432, 0.5617782430699731, -0.22113782496541345, -0.592249645340079, 2.448211434957345, -1.0176807277574522, 1.928926857300919, 0.11626520682249833, -1.0061821369777353, -0.3841559857880586, -0.0033074776353134994, -1.5727492328313466, -2.4248006675219878, -0.21415784427429718, -0.19969198400520483, -0.02933847981520863, 0.5468486836356109, 0.6710592799109883, -0.2819073257458727, 0.09107466334655907, 0.0681985996984832, -1.7206398844379445, -0.19963289418735014, 1.7342168470057158, 0.34150733154152485, -0.4016218418426464, 0.6131643860050225, 0.6794603941787593, 0.5586425708768499, 0.37585690150048234, -0.4702458921063174, -0.4747013296375755, 1.3867683507889894, 3.070337974752341};
//	iterNum = 24, bestPara, 针对默认GameStateValue胜率 64%  针对GameTreeBestMove胜率 52.5%
//	double[] parWeight = {0.6361421247169412, 1.079797373285296, -0.9529548903865098, 1.8789518384387012, 0.3952461300299715, 0.7235578500056803, 0.4700971149831644, -0.7632550497041997, -0.45012906055896196, -0.23231532994870868, 0.3399387109379557, 1.461667473279985, 1.1297129839002322, -0.28839129971050054, -0.9806039104279204, -0.3394344113610401, -1.4195673633324941, 0.31584339536507217, 0.060540489035659076, 1.1211847102343095, 1.9743547760579354, -0.38960062824831654, -0.6710698152999692, 0.12984517988142114, -1.0027114152273575, 0.5850919443396576, 0.6322624822938417, -2.234387857828772, -0.9697627723106426, -1.5778391718356615, 0.11423173137239742, 0.42760823453894947, -1.1906418288594125, 1.452662957960707, 0.2620399950653283, -1.8763787834665862, 0.21068700079962716, -1.3241855242029064, -0.07920346042579271, -0.9857521071793579, 0.4598418706203007, 1.617366729429985, 1.2824158396025231, -0.6669731960320014, -0.7875067762187683, -0.24696918043124025, -0.2108403099292283, 1.593543986630985, -1.628167274530204, -0.7883576956085055, -0.6721927444737368, 0.8238600824694274, -0.18038336125765717, -2.1925822156761168, -1.5915302235538047, 0.5594648117204286, -0.2165412423871201, -0.6087229637338827, 2.3935225712987505, -1.1837618939831362, 1.919771365590427, 0.10444099970608307, -1.2355173805793929, -0.0641355155688841, -0.020819221663333567, -1.572992350501745, -2.4222466596299355, -0.22512635810461842, -0.15900607388830404, -0.06611051640642988, 0.609373334076045, 0.6571199486273324, -0.2811060621669697, 0.09807776733736777, 0.05456696512942366, -1.7403148259316372, -0.19855270304764833, 1.718899883858397, 0.2889847422365639, -0.46824078326109037, 0.5155679488241424, 0.6413572230234639, 0.4402804494410261, 0.3587977085031646, -0.46687940305517234, -0.5333479913683334, 1.38202483013906, 2.875652082381276};
//	iterNum = 31, bestPara, 针对默认GameStateValue胜率 67%  针对GameTreeBestMove胜率 54%
//	double[] parWeight = {0.8929954042966413, 1.0283641712482738, -0.942264129771008, 1.8943439248465679, 0.39866574142021155, 0.7294703074425475, 0.4703421619433931, -0.767393886714918, -0.5007553006156429, -0.23053839998517478, 0.3671639489844447, 1.4615595579815894, 1.130130888015556, -0.32011074632953906, -1.043418046540533, -0.34189147104657763, -1.4067958133756948, 0.31574850627937046, 0.05659030992222518, 1.1505503529861683, 1.9676480236392906, -0.3910924661778627, -0.6345818269260394, 0.13517563808309832, -1.0907769316224032, 0.5826627591083579, 0.630975548232236, -2.226838368817325, -0.9980790610157111, -1.4604145055584798, 0.15838224523582914, 0.43756672632220533, -1.2152654185155807, 1.4497210926126527, 0.2624830515095092, -1.8794956702787464, 0.21449333244617566, -1.3238062726131956, -0.08330439689033477, -1.2233035245904833, 0.46057032471125825, 1.6591929963936916, 1.131033047871117, -0.6839834971698326, -0.7982977200095006, -0.26286065210033316, -0.18512607120814764, 1.5903221825589964, -1.6281361749221765, -0.7447702654800105, -0.6713686847532165, 0.8227718513149324, -0.18122802266456522, -2.146719374181759, -1.5929343855526767, 0.5619086175834045, -0.21865328123042657, -0.6094251496368229, 2.435688918601487, -1.0657211527515553, 1.9161463181867702, 0.21810105069406566, -1.1666396416929234, 0.27121070073279685, -0.0440728676403275, -1.5741414740346265, -2.508511870063247, -0.18989280583460905, -0.12170263277635256, -0.07576311822437615, 0.8030371659388295, 0.6471311333555103, -0.28038771963609366, 0.08223080691720107, 0.0266045272877081, -1.7391738093364673, -0.19755557112767982, 1.705561151237249, 0.3164004104433914, -0.47394881892815316, 0.5937468298372944, 0.6240205273450641, 0.4527819856796846, 0.3669102864147041, -0.47711745286593205, -0.5578247473482351, 1.3773518039560844, 3.102527265829704};

	// 尝试采用Linear heuristic进行action初选排序，最终局面评估还是采用上面的某些参数 （发现效果甚至会变好，所以action初选和最终局面评估可能更适合用两个评估函数）
//	使用参数 iterNum=25, bestPara, 针对默认GameStateValue 胜率 61.5%  胜率 66.5%  胜率 61% （Good）  --->   针对默认GameStateValue胜率 60%  针对GameTreeBestMove胜率 58%
//	使用参数 iterNum=18, bestPara, 针对默认GameStateValue胜率 66.5%  针对GameTreeBestMove胜率 55.5%  --->   针对默认GameStateValue胜率 64%  针对GameTreeBestMove胜率 59%
//	使用参数 iterNum=20, bestPara, 针对默认GameStateValue胜率 63%  针对GameTreeBestMove胜率 56.5%    --->   针对默认GameStateValue胜率 65%  针对GameTreeBestMove胜率 50.5% （这个突然变低....）

	// ####################### 使用 Face Hunter卡组进行训练，针对GameStateValue进行优化，搜索深度 depth=6, maxNumMoveSearched = 6 ##########################
//	iterNum = 11, bestPara, 针对默认GameStateValue胜率 61%
//	double[] parWeight = {1.6602277657988007, 0.857695668120173, -1.6451325474251117, 0.8863034227738582, -0.22357951893566602, 0.4354201072247871, 0.7978985954962228, -0.2863700722131795, -1.236170028949755, -0.396478011083795, 0.8039105164813098, 1.172636477569232, 4.658300152105493, 0.3534480366034655, -1.3149260342943365, -1.208111939783828, -1.2322030208536705, 0.40565334325343033, -0.19326664022997556, 2.2244460992222743, 1.7863003662158565, 0.06614387795394991, -0.8583471988144474, 1.9284386133260518, -1.0486413841797457, 1.1954967094407238, 0.367185334234935, -2.0301210876535247, -0.7936999706105087, -0.2759094682231892, -0.5235446913665667, 0.13586192090871338, -1.040818698922324, 1.6042399650878134, 0.5528107350693234, -2.1443296236235208, 0.16002645570181917, 0.4184683835376766, 0.7740921030922965, -1.8771829822459922, -1.2257743404416068, 1.0499671437127982, 0.5698659904743535, -1.9733677793421032, -0.7488419509199229, 4.049459647691046, 0.27310706354395986, 3.5987938487057285, -1.3028632375922682, -1.7532506552387646, -1.1781859672416555, 2.0080830222149038, -1.7709411095536693, -2.046134384817652, -2.321790704667259, 0.008919967636801121, 0.5611677890563609, -0.6572457627999163, 3.0698857569936457, -0.5761637063068891, 2.598705721359356, 0.3318538010918167, -1.9712701500812269, 2.9120376751398913, -0.799173078249665, -1.9626890998237538, -2.6238015488576436, -0.03315013958287655, -0.28391116739724936, -1.8085964062854498, 0.9448185873623505, 0.9055909427463442, -1.1233229332570847, -0.27283195331438415, -1.0383670260618314, -0.6880189058962015, 0.17195291568090482, 1.8251095611690042, -0.3587987397431117, -0.45480392367887906, 0.003755391993248147, -0.1268625455204361, 2.6974150890583815, -0.5121448856615859, -1.0414205365779448, 0.044211511836285244, 0.820538060291221, 4.942116914809573};
//	iterNum = 13, bestPara, 针对默认GameStateValue胜率 62%
//	double[] parWeight = {0.6374358844356491, 1.3486661639695385, -1.3001039811727821, 1.7699057654403103, -0.4536090766169081, 0.43756721643843133, 0.977808030431877, -0.39205612499428233, -0.9974823530191395, -0.49739281723953754, 1.059062389957353, 1.365633947018877, 2.136429410845871, 0.3651878882831061, -1.0333342140486341, -0.8243867231533103, -1.205460203284165, 0.6367805213748552, 0.36501559150419643, 2.1718387277638724, 1.844683428984823, 0.4347327640254902, -0.8943882283213155, 1.8352407316699846, -1.1166467816220278, 1.1740850406976056, 0.9765486891813979, -2.4232174392930395, -0.799976237166497, -0.1791006160896861, -0.38947385338466384, 0.35729501090122784, -1.0186628884367934, 1.4723780086190663, -1.708577240476017, -2.501235161201205, -0.025430737405497283, 1.3329533835515732, 1.0411037898553221, -1.5556506035092816, -1.0681707029379752, 1.0383742889180834, 0.5781144818749295, -2.011330091904933, -1.0536207427708781, 4.128605023217576, 0.5467437058645215, 3.0037023743142135, -1.2763614904034533, -1.8302608102513378, -1.8028262103041115, 1.8874594535365534, -1.6875912555948043, -2.110638267244946, -3.262231295303651, 0.13697632638656954, 0.7504405354169796, -0.4473455702711375, 2.881542040809076, -0.827829310262767, 2.8163566030277947, 0.3296379525026226, -1.5332057620602806, 2.0538158893661427, -0.169229995747179, -1.903217701288021, -3.073236357981753, -0.03894625872002003, -0.5266074374083847, -0.2639224745894115, 0.7346836270621371, 0.8491243645069204, 0.8617794208000472, -0.12929157215535125, -1.1325472505124454, -1.3811401299851167, 0.08172479616053152, 2.183924475949394, 0.08274098791291604, -0.4811784401205908, 0.057091700608864926, -0.07516804934575746, 3.1220428234632314, 0.20418712681158174, -1.1890230966900577, 0.41773208330058753, 0.9051672438953647, 4.339974166671972};
//	iterNum = 18, bestPara, 针对默认GameStateValue胜率 60.5%
//	double[] parWeight = {1.0083009536147813, 1.719688292088351, -1.363871772741337, 0.8506995685620055, -0.45537228615931846, 0.4811746352581075, 1.2250907129416904, -0.031341642945271295, -1.0095879529509562, 1.031278612922725, 0.8875374192532725, 1.3862984385363986, 2.349287022902944, 0.3889146087236705, -0.35995517586136017, -1.669063837458983, -1.2295306668697183, 0.014981655609537847, 0.15518409717783965, 2.2391301756891075, 1.7770913394727001, 0.518354858933407, -0.9064613360361232, 2.23867435332887, -0.942541071034825, 0.8960740674068794, 0.9610390436475459, -2.205793731735308, -0.791935310014134, -0.20581891378585726, -0.5446280146247092, 0.3405910625030355, -0.9795825592842584, 1.7546306780822087, -0.9188659303838427, -2.2586860965047397, 0.16217565675313336, 0.04192426965973206, 0.8640463820330295, -1.6551203496852098, -1.1085511614786545, 1.029616549568246, 0.46243730664263055, -1.9886393227237291, -0.9504609895724571, 3.7715594722733408, 0.44810528518891185, 2.728870748993751, -2.281494669416888, -1.3086686094449547, -0.6806168683405789, 1.5760578781223769, -1.6371958075398225, -2.134793105240067, -3.3109992439346585, 0.06479658870747575, 0.649946309317408, -0.45464215696901, 3.20316011121293, -0.42157725651986994, 2.393750699985572, 0.5505449821197818, -1.4875311012418897, 1.8495994371505735, -0.37956012847994886, -2.0535551469228372, -3.0536028968956153, -0.044620536226900584, -0.556765930246009, -1.38236877986947, 0.8614593361529684, 0.7551190466167903, -0.15127604939397354, -0.07780002378619669, -1.4688152260554699, -1.370428937731735, 0.13630590866199632, 2.127551834374694, -0.03517107268001307, -0.47068006474360935, -0.06621420628020604, 0.013653419536144854, 3.1675095765461743, 0.3009074336504744, -1.5650787636850247, 1.5433766342335353, 0.7923965277370604, 4.552152478014897};
// 	iterNum = 23, bestPara, 针对默认GameStateValue胜率 61.5%
//	double[] parWeight = {0.763349839612086, 2.17301156386965, -1.3573538624883335, 1.0271038821921112, -0.32552631789996067, 0.3563279887446557, 1.1486571197669964, -0.005626943222363005, -1.0288120185883518, 0.25490708369994275, 0.7776502336787401, 1.4280632537367026, 2.3691024456519663, 0.33166425576653874, -1.1599712209391269, -1.1982882780462067, -1.2299836174140248, 0.006452806372582089, 0.15687287074228504, 2.2469410253791713, 1.7440966633241737, 0.4878082345386621, -0.907883308320659, 1.5181934651181017, -1.0114254887747736, 0.9110306354471238, 0.9653863111701542, -2.207858076439168, -0.7710838893375378, -0.2204972379564592, -0.5151620327667568, 0.34031462208055885, -0.9885226124263212, 1.8250376498010752, -0.7251878813044101, -2.4594848529448354, 0.11581837676961758, 0.36169640081241344, 0.8640935464183092, -1.438452290435357, -1.1434131043683118, 1.0356954393983262, 0.4607564895823132, -2.0058006001936817, -0.9576939308017177, 3.728592990730517, 0.46045907740069203, 2.716334146818475, -2.393245264530084, -1.3398562678654917, -0.39372300970883894, 1.6906086995880185, -1.652403923243489, -2.1419730342115, -3.345235231244375, 0.08093173778102478, 0.6561412181478709, -0.4735779234536049, 2.9996776506098204, -0.291444792003926, 2.5404161474952502, 0.8256042500562741, -1.5091078208986433, 0.9858758964656814, 0.04167227260878753, -2.0431695138082318, -3.02002374777305, -0.04010027422446376, -0.5566961120684715, -1.0874520465250461, 0.6966545691846117, 0.7851518518181386, 0.22483785752722643, -0.09507129591531532, -1.851942834940174, -1.3712745788082756, 0.12720693932909266, 2.1626369754614916, 0.2886015228450932, -0.4450051014038175, 0.0695620313487667, 0.010136576900943344, 3.272215441293301, 0.4019107903807926, -1.1508351101309438, -0.20654552196780235, 0.8743686567829434, 4.468746084012994};

	private final static Logger logger = LoggerFactory.getLogger(GameTreePruneBestMove.class);
	private final IGameStateHeuristic heuristic;
	private final static int maxNumMoveSearched = 6;

	public GameTreePruneBestMove(IGameStateHeuristic heuristic) {
		this.heuristic = heuristic;
	}

	@Override
	public String getName() {
		return "Game Tree Deeper Best Move";
	}

	@Override
	public List<Card> mulligan(GameContext context, Player player, List<Card> cards) {
		List<Card> discardedCards = new ArrayList<Card>();
		for (Card card : cards) {
			if (card.getBaseManaCost() >= 4 || card.getCardId()=="minion_patches_the_pirate") {  //耗法值>=4的不要, Patches the Pirate这张牌等他被触发召唤
				discardedCards.add(card);
			}
		}
		return discardedCards;
	}

	private static int calculateThreatLevel(GameContext context, int playerId) {
		int damageOnBoard = 0;
		Player player = context.getPlayer(playerId);
		Player opponent = context.getOpponent(player);
		for (Minion minion : opponent.getMinions()) {
			damageOnBoard += minion.getAttack(); // * minion.getAttributeValue(Attribute.NUMBER_OF_ATTACKS); (暂时没有考虑风怒、冻结等的影响)
		}
		damageOnBoard += getHeroDamage(opponent.getHero());  //对方随从 + 英雄的攻击力

		int remainingHp = player.getHero().getEffectiveHp() - damageOnBoard;  // 根据减去对方伤害后我方剩余血量来确定威胁等级
		if (remainingHp < 1) {
			return 2;
		} else if (remainingHp < 15) {
			return 1;
		}
		return 0;
	}

	private static int getHeroDamage(Hero hero) {
		int heroDamage = 0;
		if (hero.getHeroClass() == HeroClass.MAGE) {
			heroDamage += 1;
		} else if (hero.getHeroClass() == HeroClass.HUNTER) {
			heroDamage += 2;
		} else if (hero.getHeroClass() == HeroClass.DRUID) {
			heroDamage += 1;
		} else if (hero.getHeroClass() == HeroClass.ROGUE) {
			heroDamage += 1;
		}
		if (hero.getWeapon() != null) {
			heroDamage += hero.getWeapon().getWeaponDamage();
		}
		return heroDamage;
	}

	private double evaluateContext(GameContext context, int playerId) {
		Player player = context.getPlayer(playerId);
		Player opponent = context.getOpponent(player);
		if (player.getHero().isDestroyed()) {   // 己方被干掉，得分 负无穷
			return Float.NEGATIVE_INFINITY;  // 正负无穷会影响envState的解析，如果要加的话可以改成 +-100之类的
		}
		if (opponent.getHero().isDestroyed()) {  // 对方被干掉，得分 正无穷
			return Float.POSITIVE_INFINITY;
		}
		List<Integer> envState = player.getPlayerState();
		envState.addAll(opponent.getPlayerState());

		// 威胁等级标识特征
		int threatLevelHigh= 0;
		int threatLevelMiddle = 0;
		int threatLevel = calculateThreatLevel(context, playerId);
		if(threatLevel == 2){
			threatLevelHigh = 1;
		}else if(threatLevel == 1){
			threatLevelMiddle = 1;
		}
		envState.add(threatLevelHigh);
		envState.add(threatLevelMiddle);

		double score = 0;
		for (int i = 0; i < parWeight.length; i++){
			score += parWeight[i]*envState.get(i);
		}
		return score;
	}

	private GameContext simulateAction(GameContext simulation, int playerId, GameAction action) {
		simulation.getLogic().performGameAction(playerId, action);   // 在simulation GameContext中执行action，似乎是获取logic模块来执行action的
		return simulation;
	}

	@Override
	public GameAction requestAction(GameContext context, Player player, List<GameAction> validActions) {

		if (validActions.size() == 1) {  //只剩一个action一般是 END_TURN
			return validActions.get(0);
		}

		int depth = 6;
		// when evaluating battlecry and discover actions, only optimize the immediate value （两种特殊的action）
		if (validActions.get(0).getActionType() == ActionType.BATTLECRY) {
			depth = 0;
		} else if (validActions.get(0).getActionType() == ActionType.DISCOVER) {  // battlecry and discover actions一定会在第一个么？
			return validActions.get(0);
		}

		SortedMap<Double, GameAction> scoreActionMap = new TreeMap<>(Comparator.reverseOrder());
		for (GameAction gameAction : validActions) {  // 遍历validactions，使用Linear评估函数评估得到的局面，并按得分降序排列
			GameContext simulationResult = simulateAction(context.clone(), player.getId(), gameAction);  //假设执行gameAction，得到之后的game context
			double gameStateScore = evaluateContext(simulationResult, player.getId());	//heuristic.getScore(simulationResult, player.getId());     //heuristic评估执行gameAction之后的游戏局面的分数
			if(!scoreActionMap.containsKey(gameStateScore)){  // 注意：暂时简单的认为gameStateScore相同的两个simulationResult context一样，只保留第一个simulationResult对应的action
				scoreActionMap.put(gameStateScore, gameAction);
			}
			simulationResult.dispose();  //GameContext环境每次仿真完销毁
		}

		GameAction bestAction = validActions.get(0);
		double bestScore = Double.NEGATIVE_INFINITY;
		int k = 0;
		for(GameAction gameAction: scoreActionMap.values()){
			double score = alphaBeta(context, player.getId(), gameAction, depth);  // 对每一个可能action，使用alphaBeta递归计算得分
			if (score > bestScore) {
				bestAction = gameAction;
				bestScore = score;
			}
			k += 1;
			if(k >= maxNumMoveSearched){
				break;
			}
		}
		return bestAction;
	}

	private double alphaBeta(GameContext context, int playerId, GameAction action, int depth) {
		GameContext simulation = context.clone();  // clone目前环境
		simulation.getLogic().performGameAction(playerId, action);  // 在拷贝环境中执行action
		if (depth == 0 || simulation.getActivePlayerId() != playerId || simulation.gameDecided()) {  // depth层递归结束、发生玩家切换（我方这轮打完了）或者比赛结果已定时，返回score
			return evaluateContext(simulation, playerId);
		}

		List<GameAction> validActions = simulation.getValidActions();  //执行完一个action之后，获取接下来可以执行的action

		SortedMap<Double, GameAction> scoreActionMap = new TreeMap<>(Comparator.reverseOrder());
		for (GameAction gameAction : validActions) {  // 遍历validactions，使用Linear评估函数评估得到的局面，并按得分降序排列
			GameContext simulationResult = simulateAction(simulation.clone(), playerId, gameAction);  //假设执行gameAction，得到之后的game context
			double gameStateScore = evaluateContext(simulationResult, playerId);  //heuristic.getScore(simulationResult, playerId);  //heuristic评估执行gameAction之后的游戏局面的分数
			if(!scoreActionMap.containsKey(gameStateScore)){  // 注意：暂时简单的认为gameStateScore相同的两个simulationResult context一样，只保留第一个simulationResult对应的action
				scoreActionMap.put(gameStateScore, gameAction);
			}
			simulationResult.dispose();  //GameContext环境每次仿真完销毁
		}

		double score = Float.NEGATIVE_INFINITY;
		int k = 0;
		for(GameAction gameAction: scoreActionMap.values()){
			score = Math.max(score, alphaBeta(simulation, playerId, gameAction, depth - 1));  // 递归调用alphaBeta，取评分较大的
			k += 1;
			if (score >= 100000 || k >= maxNumMoveSearched) {
				break;
			}
		}
		return score;
	}

}
